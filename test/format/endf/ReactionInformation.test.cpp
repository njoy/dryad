// include Catch2
#include <catch2/catch_test_macros.hpp>

// what we are testing
#include "dryad/format/endf/ReactionInformation.hpp"

// other includes
#include "ENDFtk/tree/fromFile.hpp"

// convenience typedefs
using ReactionInformation = njoy::dryad::format::endf::ReactionInformation;

SCENARIO( "ReactionInformation" ) {

  GIVEN( "an MT number" ) {

    THEN( "we can verify if the MT number is a valid fission number" ) {

      CHECK( false == ReactionInformation::isFission(   1 ) );
      CHECK( true == ReactionInformation::isFission(  18 ) );
      CHECK( true == ReactionInformation::isFission(  19 ) );
      CHECK( true == ReactionInformation::isFission(  20 ) );
      CHECK( true == ReactionInformation::isFission(  21 ) );
      CHECK( true == ReactionInformation::isFission(  38 ) );
      CHECK( false == ReactionInformation::isFission( 102 ) );
    }

    THEN( "we an verify if the MT number is a valid atomic interaction" ) {

      CHECK( false == ReactionInformation::isAtomic( 500 ) );
      CHECK( true == ReactionInformation::isAtomic( 501 ) );
      CHECK( true == ReactionInformation::isAtomic( 502 ) );
      CHECK( false == ReactionInformation::isAtomic( 503 ) );
      CHECK( true == ReactionInformation::isAtomic( 504 ) );
      CHECK( true == ReactionInformation::isAtomic( 505 ) );
      CHECK( true == ReactionInformation::isAtomic( 506 ) );
      CHECK( false == ReactionInformation::isAtomic( 507 ) );
      CHECK( false == ReactionInformation::isAtomic( 508 ) );
      CHECK( false == ReactionInformation::isAtomic( 509 ) );
      CHECK( false == ReactionInformation::isAtomic( 510 ) );
      CHECK( false == ReactionInformation::isAtomic( 511 ) );
      CHECK( false == ReactionInformation::isAtomic( 512 ) );
      CHECK( false == ReactionInformation::isAtomic( 513 ) );
      CHECK( false == ReactionInformation::isAtomic( 514 ) );
      CHECK( true == ReactionInformation::isAtomic( 515 ) );
      CHECK( true == ReactionInformation::isAtomic( 516 ) );
      CHECK( true == ReactionInformation::isAtomic( 517 ) );
      CHECK( false == ReactionInformation::isAtomic( 518 ) );
      CHECK( false == ReactionInformation::isAtomic( 519 ) );
      CHECK( false == ReactionInformation::isAtomic( 520 ) );
      CHECK( false == ReactionInformation::isAtomic( 521 ) );
      CHECK( true == ReactionInformation::isAtomic( 522 ) );
      CHECK( true == ReactionInformation::isAtomic( 523 ) );
      CHECK( false == ReactionInformation::isAtomic( 524 ) );
      CHECK( true == ReactionInformation::isAtomic( 525 ) );
      CHECK( true == ReactionInformation::isAtomic( 526 ) );
      CHECK( true == ReactionInformation::isAtomic( 527 ) );
      CHECK( true == ReactionInformation::isAtomic( 528 ) );
      CHECK( false == ReactionInformation::isAtomic( 529 ) );
      CHECK( false == ReactionInformation::isAtomic( 530 ) );
      CHECK( false == ReactionInformation::isAtomic( 531 ) );
      CHECK( false == ReactionInformation::isAtomic( 532 ) );
      CHECK( false == ReactionInformation::isAtomic( 533 ) );
      CHECK( true == ReactionInformation::isAtomic( 534 ) );
      CHECK( true == ReactionInformation::isAtomic( 535 ) );
      CHECK( true == ReactionInformation::isAtomic( 536 ) );
      CHECK( true == ReactionInformation::isAtomic( 537 ) );
      CHECK( true == ReactionInformation::isAtomic( 538 ) );
      CHECK( true == ReactionInformation::isAtomic( 539 ) );
      CHECK( true == ReactionInformation::isAtomic( 540 ) );
      CHECK( true == ReactionInformation::isAtomic( 541 ) );
      CHECK( true == ReactionInformation::isAtomic( 542 ) );
      CHECK( true == ReactionInformation::isAtomic( 543 ) );
      CHECK( true == ReactionInformation::isAtomic( 544 ) );
      CHECK( true == ReactionInformation::isAtomic( 545 ) );
      CHECK( true == ReactionInformation::isAtomic( 546 ) );
      CHECK( true == ReactionInformation::isAtomic( 547 ) );
      CHECK( true == ReactionInformation::isAtomic( 548 ) );
      CHECK( true == ReactionInformation::isAtomic( 549 ) );
      CHECK( true == ReactionInformation::isAtomic( 550 ) );
      CHECK( true == ReactionInformation::isAtomic( 551 ) );
      CHECK( true == ReactionInformation::isAtomic( 552 ) );
      CHECK( true == ReactionInformation::isAtomic( 553 ) );
      CHECK( true == ReactionInformation::isAtomic( 554 ) );
      CHECK( true == ReactionInformation::isAtomic( 555 ) );
      CHECK( true == ReactionInformation::isAtomic( 556 ) );
      CHECK( true == ReactionInformation::isAtomic( 557 ) );
      CHECK( true == ReactionInformation::isAtomic( 558 ) );
      CHECK( true == ReactionInformation::isAtomic( 559 ) );
      CHECK( true == ReactionInformation::isAtomic( 560 ) );
      CHECK( true == ReactionInformation::isAtomic( 561 ) );
      CHECK( true == ReactionInformation::isAtomic( 562 ) );
      CHECK( true == ReactionInformation::isAtomic( 563 ) );
      CHECK( true == ReactionInformation::isAtomic( 564 ) );
      CHECK( true == ReactionInformation::isAtomic( 565 ) );
      CHECK( true == ReactionInformation::isAtomic( 566 ) );
      CHECK( true == ReactionInformation::isAtomic( 567 ) );
      CHECK( true == ReactionInformation::isAtomic( 568 ) );
      CHECK( true == ReactionInformation::isAtomic( 569 ) );
      CHECK( true == ReactionInformation::isAtomic( 570 ) );
      CHECK( true == ReactionInformation::isAtomic( 571 ) );
      CHECK( true == ReactionInformation::isAtomic( 572 ) );
      CHECK( false == ReactionInformation::isAtomic( 573 ) );
    }

    THEN( "we can verify if the MT number is a valid reaction number" ) {

      CHECK( false == ReactionInformation::isValid( -1 ) );
      CHECK( false == ReactionInformation::isValid( 0 ) );
      CHECK( true == ReactionInformation::isValid(   1 ) );
      CHECK( true == ReactionInformation::isValid(   2 ) );
      CHECK( true == ReactionInformation::isValid(   3 ) );
      CHECK( true == ReactionInformation::isValid(   4 ) );
      CHECK( true == ReactionInformation::isValid(   5 ) );
      CHECK( false == ReactionInformation::isValid(   6 ) );
      CHECK( false == ReactionInformation::isValid(   7 ) );
      CHECK( false == ReactionInformation::isValid(   8 ) );
      CHECK( false == ReactionInformation::isValid(   9 ) );
      CHECK( false == ReactionInformation::isValid(  10 ) );
      CHECK( true == ReactionInformation::isValid(  11 ) );
      CHECK( false == ReactionInformation::isValid(  12 ) );
      CHECK( false == ReactionInformation::isValid(  13 ) );
      CHECK( false == ReactionInformation::isValid(  14 ) );
      CHECK( false == ReactionInformation::isValid(  15 ) );
      CHECK( true == ReactionInformation::isValid(  16 ) );
      CHECK( true == ReactionInformation::isValid(  17 ) );
      CHECK( true == ReactionInformation::isValid(  18 ) );
      CHECK( true == ReactionInformation::isValid(  19 ) );
      CHECK( true == ReactionInformation::isValid(  20 ) );
      CHECK( true == ReactionInformation::isValid(  21 ) );
      CHECK( true == ReactionInformation::isValid(  22 ) );
      CHECK( true == ReactionInformation::isValid(  23 ) );
      CHECK( true == ReactionInformation::isValid(  24 ) );
      CHECK( true == ReactionInformation::isValid(  25 ) );
      CHECK( true == ReactionInformation::isValid(  28 ) );
      CHECK( true == ReactionInformation::isValid(  29 ) );
      CHECK( true == ReactionInformation::isValid(  30 ) );
      CHECK( false == ReactionInformation::isValid(  31 ) );
      CHECK( true == ReactionInformation::isValid(  32 ) );
      CHECK( true == ReactionInformation::isValid(  33 ) );
      CHECK( true == ReactionInformation::isValid(  34 ) );
      CHECK( true == ReactionInformation::isValid(  35 ) );
      CHECK( true == ReactionInformation::isValid(  36 ) );
      CHECK( true == ReactionInformation::isValid(  37 ) );
      CHECK( true == ReactionInformation::isValid(  38 ) );
      CHECK( false == ReactionInformation::isValid(  39 ) );
      CHECK( false == ReactionInformation::isValid(  40 ) );
      CHECK( true == ReactionInformation::isValid(  41 ) );
      CHECK( true == ReactionInformation::isValid(  42 ) );
      CHECK( false == ReactionInformation::isValid(  43 ) );
      CHECK( true == ReactionInformation::isValid(  44 ) );
      CHECK( true == ReactionInformation::isValid(  45 ) );
      CHECK( false == ReactionInformation::isValid(  46 ) );
      CHECK( false == ReactionInformation::isValid(  47 ) );
      CHECK( false == ReactionInformation::isValid(  48 ) );
      CHECK( false == ReactionInformation::isValid(  49 ) );
      CHECK( true == ReactionInformation::isValid(  50 ) );
      CHECK( true == ReactionInformation::isValid(  51 ) );
      CHECK( true == ReactionInformation::isValid(  52 ) );
      CHECK( true == ReactionInformation::isValid(  53 ) );
      CHECK( true == ReactionInformation::isValid(  54 ) );
      CHECK( true == ReactionInformation::isValid(  55 ) );
      CHECK( true == ReactionInformation::isValid(  56 ) );
      CHECK( true == ReactionInformation::isValid(  57 ) );
      CHECK( true == ReactionInformation::isValid(  58 ) );
      CHECK( true == ReactionInformation::isValid(  59 ) );
      CHECK( true == ReactionInformation::isValid(  60 ) );
      CHECK( true == ReactionInformation::isValid(  61 ) );
      CHECK( true == ReactionInformation::isValid(  62 ) );
      CHECK( true == ReactionInformation::isValid(  63 ) );
      CHECK( true == ReactionInformation::isValid(  64 ) );
      CHECK( true == ReactionInformation::isValid(  65 ) );
      CHECK( true == ReactionInformation::isValid(  66 ) );
      CHECK( true == ReactionInformation::isValid(  67 ) );
      CHECK( true == ReactionInformation::isValid(  68 ) );
      CHECK( true == ReactionInformation::isValid(  69 ) );
      CHECK( true == ReactionInformation::isValid(  70 ) );
      CHECK( true == ReactionInformation::isValid(  71 ) );
      CHECK( true == ReactionInformation::isValid(  72 ) );
      CHECK( true == ReactionInformation::isValid(  73 ) );
      CHECK( true == ReactionInformation::isValid(  74 ) );
      CHECK( true == ReactionInformation::isValid(  75 ) );
      CHECK( true == ReactionInformation::isValid(  76 ) );
      CHECK( true == ReactionInformation::isValid(  77 ) );
      CHECK( true == ReactionInformation::isValid(  78 ) );
      CHECK( true == ReactionInformation::isValid(  79 ) );
      CHECK( true == ReactionInformation::isValid(  80 ) );
      CHECK( true == ReactionInformation::isValid(  81 ) );
      CHECK( true == ReactionInformation::isValid(  82 ) );
      CHECK( true == ReactionInformation::isValid(  83 ) );
      CHECK( true == ReactionInformation::isValid(  84 ) );
      CHECK( true == ReactionInformation::isValid(  85 ) );
      CHECK( true == ReactionInformation::isValid(  86 ) );
      CHECK( true == ReactionInformation::isValid(  87 ) );
      CHECK( true == ReactionInformation::isValid(  88 ) );
      CHECK( true == ReactionInformation::isValid(  89 ) );
      CHECK( true == ReactionInformation::isValid(  90 ) );
      CHECK( true == ReactionInformation::isValid(  91 ) );
      CHECK( false == ReactionInformation::isValid(  92 ) );
      CHECK( false == ReactionInformation::isValid(  93 ) );
      CHECK( false == ReactionInformation::isValid(  94 ) );
      CHECK( false == ReactionInformation::isValid(  95 ) );
      CHECK( false == ReactionInformation::isValid(  96 ) );
      CHECK( false == ReactionInformation::isValid(  97 ) );
      CHECK( false == ReactionInformation::isValid(  98 ) );
      CHECK( false == ReactionInformation::isValid(  99 ) );
      CHECK( false == ReactionInformation::isValid( 100 ) );
      CHECK( true == ReactionInformation::isValid( 101 ) );
      CHECK( true == ReactionInformation::isValid( 102 ) );
      CHECK( true == ReactionInformation::isValid( 103 ) );
      CHECK( true == ReactionInformation::isValid( 104 ) );
      CHECK( true == ReactionInformation::isValid( 105 ) );
      CHECK( true == ReactionInformation::isValid( 106 ) );
      CHECK( true == ReactionInformation::isValid( 107 ) );
      CHECK( true == ReactionInformation::isValid( 108 ) );
      CHECK( true == ReactionInformation::isValid( 109 ) );
      CHECK( false == ReactionInformation::isValid( 110 ) );
      CHECK( true == ReactionInformation::isValid( 111 ) );
      CHECK( true == ReactionInformation::isValid( 112 ) );
      CHECK( true == ReactionInformation::isValid( 113 ) );
      CHECK( true == ReactionInformation::isValid( 114 ) );
      CHECK( true == ReactionInformation::isValid( 115 ) );
      CHECK( true == ReactionInformation::isValid( 116 ) );
      CHECK( true == ReactionInformation::isValid( 117 ) );
      CHECK( false == ReactionInformation::isValid( 118 ) );
      CHECK( false == ReactionInformation::isValid( 119 ) );
      for ( int mt = 120; mt < 152; ++mt ) {

        CHECK( false == ReactionInformation::isValid( mt ) );
      }
      CHECK( true == ReactionInformation::isValid( 152 ) );
      CHECK( true == ReactionInformation::isValid( 153 ) );
      CHECK( true == ReactionInformation::isValid( 154 ) );
      CHECK( true == ReactionInformation::isValid( 155 ) );
      CHECK( true == ReactionInformation::isValid( 156 ) );
      CHECK( true == ReactionInformation::isValid( 157 ) );
      CHECK( true == ReactionInformation::isValid( 158 ) );
      CHECK( true == ReactionInformation::isValid( 159 ) );
      CHECK( true == ReactionInformation::isValid( 160 ) );
      CHECK( true == ReactionInformation::isValid( 161 ) );
      CHECK( true == ReactionInformation::isValid( 162 ) );
      CHECK( true == ReactionInformation::isValid( 163 ) );
      CHECK( true == ReactionInformation::isValid( 164 ) );
      CHECK( true == ReactionInformation::isValid( 165 ) );
      CHECK( true == ReactionInformation::isValid( 166 ) );
      CHECK( true == ReactionInformation::isValid( 167 ) );
      CHECK( true == ReactionInformation::isValid( 168 ) );
      CHECK( true == ReactionInformation::isValid( 169 ) );
      CHECK( true == ReactionInformation::isValid( 170 ) );
      CHECK( true == ReactionInformation::isValid( 171 ) );
      CHECK( true == ReactionInformation::isValid( 172 ) );
      CHECK( true == ReactionInformation::isValid( 173 ) );
      CHECK( true == ReactionInformation::isValid( 174 ) );
      CHECK( true == ReactionInformation::isValid( 175 ) );
      CHECK( true == ReactionInformation::isValid( 176 ) );
      CHECK( true == ReactionInformation::isValid( 177 ) );
      CHECK( true == ReactionInformation::isValid( 178 ) );
      CHECK( true == ReactionInformation::isValid( 179 ) );
      CHECK( true == ReactionInformation::isValid( 180 ) );
      CHECK( true == ReactionInformation::isValid( 181 ) );
      CHECK( true == ReactionInformation::isValid( 182 ) );
      CHECK( true == ReactionInformation::isValid( 183 ) );
      CHECK( true == ReactionInformation::isValid( 184 ) );
      CHECK( true == ReactionInformation::isValid( 185 ) );
      CHECK( true == ReactionInformation::isValid( 186 ) );
      CHECK( true == ReactionInformation::isValid( 187 ) );
      CHECK( true == ReactionInformation::isValid( 188 ) );
      CHECK( true == ReactionInformation::isValid( 189 ) );
      CHECK( true == ReactionInformation::isValid( 190 ) );
      CHECK( true == ReactionInformation::isValid( 191 ) );
      CHECK( true == ReactionInformation::isValid( 192 ) );
      CHECK( true == ReactionInformation::isValid( 193 ) );
      CHECK( true == ReactionInformation::isValid( 194 ) );
      CHECK( true == ReactionInformation::isValid( 195 ) );
      CHECK( true == ReactionInformation::isValid( 196 ) );
      CHECK( true == ReactionInformation::isValid( 197 ) );
      CHECK( true == ReactionInformation::isValid( 198 ) );
      CHECK( true == ReactionInformation::isValid( 199 ) );
      CHECK( true == ReactionInformation::isValid( 200 ) );
      CHECK( true == ReactionInformation::isValid( 600 ) );
      CHECK( true == ReactionInformation::isValid( 601 ) );
      CHECK( true == ReactionInformation::isValid( 602 ) );
      CHECK( true == ReactionInformation::isValid( 603 ) );
      CHECK( true == ReactionInformation::isValid( 604 ) );
      CHECK( true == ReactionInformation::isValid( 605 ) );
      CHECK( true == ReactionInformation::isValid( 606 ) );
      CHECK( true == ReactionInformation::isValid( 607 ) );
      CHECK( true == ReactionInformation::isValid( 608 ) );
      CHECK( true == ReactionInformation::isValid( 609 ) );
      CHECK( true == ReactionInformation::isValid( 610 ) );
      CHECK( true == ReactionInformation::isValid( 611 ) );
      CHECK( true == ReactionInformation::isValid( 612 ) );
      CHECK( true == ReactionInformation::isValid( 613 ) );
      CHECK( true == ReactionInformation::isValid( 614 ) );
      CHECK( true == ReactionInformation::isValid( 615 ) );
      CHECK( true == ReactionInformation::isValid( 616 ) );
      CHECK( true == ReactionInformation::isValid( 617 ) );
      CHECK( true == ReactionInformation::isValid( 618 ) );
      CHECK( true == ReactionInformation::isValid( 619 ) );
      CHECK( true == ReactionInformation::isValid( 620 ) );
      CHECK( true == ReactionInformation::isValid( 621 ) );
      CHECK( true == ReactionInformation::isValid( 622 ) );
      CHECK( true == ReactionInformation::isValid( 623 ) );
      CHECK( true == ReactionInformation::isValid( 624 ) );
      CHECK( true == ReactionInformation::isValid( 625 ) );
      CHECK( true == ReactionInformation::isValid( 626 ) );
      CHECK( true == ReactionInformation::isValid( 627 ) );
      CHECK( true == ReactionInformation::isValid( 628 ) );
      CHECK( true == ReactionInformation::isValid( 629 ) );
      CHECK( true == ReactionInformation::isValid( 630 ) );
      CHECK( true == ReactionInformation::isValid( 631 ) );
      CHECK( true == ReactionInformation::isValid( 632 ) );
      CHECK( true == ReactionInformation::isValid( 633 ) );
      CHECK( true == ReactionInformation::isValid( 634 ) );
      CHECK( true == ReactionInformation::isValid( 635 ) );
      CHECK( true == ReactionInformation::isValid( 636 ) );
      CHECK( true == ReactionInformation::isValid( 637 ) );
      CHECK( true == ReactionInformation::isValid( 638 ) );
      CHECK( true == ReactionInformation::isValid( 639 ) );
      CHECK( true == ReactionInformation::isValid( 640 ) );
      CHECK( true == ReactionInformation::isValid( 641 ) );
      CHECK( true == ReactionInformation::isValid( 642 ) );
      CHECK( true == ReactionInformation::isValid( 643 ) );
      CHECK( true == ReactionInformation::isValid( 644 ) );
      CHECK( true == ReactionInformation::isValid( 645 ) );
      CHECK( true == ReactionInformation::isValid( 646 ) );
      CHECK( true == ReactionInformation::isValid( 647 ) );
      CHECK( true == ReactionInformation::isValid( 648 ) );
      CHECK( true == ReactionInformation::isValid( 649 ) );
      CHECK( true == ReactionInformation::isValid( 650 ) );
      CHECK( true == ReactionInformation::isValid( 651 ) );
      CHECK( true == ReactionInformation::isValid( 652 ) );
      CHECK( true == ReactionInformation::isValid( 653 ) );
      CHECK( true == ReactionInformation::isValid( 654 ) );
      CHECK( true == ReactionInformation::isValid( 655 ) );
      CHECK( true == ReactionInformation::isValid( 656 ) );
      CHECK( true == ReactionInformation::isValid( 657 ) );
      CHECK( true == ReactionInformation::isValid( 658 ) );
      CHECK( true == ReactionInformation::isValid( 659 ) );
      CHECK( true == ReactionInformation::isValid( 660 ) );
      CHECK( true == ReactionInformation::isValid( 661 ) );
      CHECK( true == ReactionInformation::isValid( 662 ) );
      CHECK( true == ReactionInformation::isValid( 663 ) );
      CHECK( true == ReactionInformation::isValid( 664 ) );
      CHECK( true == ReactionInformation::isValid( 665 ) );
      CHECK( true == ReactionInformation::isValid( 666 ) );
      CHECK( true == ReactionInformation::isValid( 667 ) );
      CHECK( true == ReactionInformation::isValid( 668 ) );
      CHECK( true == ReactionInformation::isValid( 669 ) );
      CHECK( true == ReactionInformation::isValid( 670 ) );
      CHECK( true == ReactionInformation::isValid( 671 ) );
      CHECK( true == ReactionInformation::isValid( 672 ) );
      CHECK( true == ReactionInformation::isValid( 673 ) );
      CHECK( true == ReactionInformation::isValid( 674 ) );
      CHECK( true == ReactionInformation::isValid( 675 ) );
      CHECK( true == ReactionInformation::isValid( 676 ) );
      CHECK( true == ReactionInformation::isValid( 677 ) );
      CHECK( true == ReactionInformation::isValid( 678 ) );
      CHECK( true == ReactionInformation::isValid( 679 ) );
      CHECK( true == ReactionInformation::isValid( 680 ) );
      CHECK( true == ReactionInformation::isValid( 681 ) );
      CHECK( true == ReactionInformation::isValid( 682 ) );
      CHECK( true == ReactionInformation::isValid( 683 ) );
      CHECK( true == ReactionInformation::isValid( 684 ) );
      CHECK( true == ReactionInformation::isValid( 685 ) );
      CHECK( true == ReactionInformation::isValid( 686 ) );
      CHECK( true == ReactionInformation::isValid( 687 ) );
      CHECK( true == ReactionInformation::isValid( 688 ) );
      CHECK( true == ReactionInformation::isValid( 689 ) );
      CHECK( true == ReactionInformation::isValid( 690 ) );
      CHECK( true == ReactionInformation::isValid( 691 ) );
      CHECK( true == ReactionInformation::isValid( 692 ) );
      CHECK( true == ReactionInformation::isValid( 693 ) );
      CHECK( true == ReactionInformation::isValid( 694 ) );
      CHECK( true == ReactionInformation::isValid( 695 ) );
      CHECK( true == ReactionInformation::isValid( 696 ) );
      CHECK( true == ReactionInformation::isValid( 697 ) );
      CHECK( true == ReactionInformation::isValid( 698 ) );
      CHECK( true == ReactionInformation::isValid( 699 ) );
      CHECK( true == ReactionInformation::isValid( 700 ) );
      CHECK( true == ReactionInformation::isValid( 701 ) );
      CHECK( true == ReactionInformation::isValid( 702 ) );
      CHECK( true == ReactionInformation::isValid( 703 ) );
      CHECK( true == ReactionInformation::isValid( 704 ) );
      CHECK( true == ReactionInformation::isValid( 705 ) );
      CHECK( true == ReactionInformation::isValid( 706 ) );
      CHECK( true == ReactionInformation::isValid( 707 ) );
      CHECK( true == ReactionInformation::isValid( 708 ) );
      CHECK( true == ReactionInformation::isValid( 709 ) );
      CHECK( true == ReactionInformation::isValid( 710 ) );
      CHECK( true == ReactionInformation::isValid( 711 ) );
      CHECK( true == ReactionInformation::isValid( 712 ) );
      CHECK( true == ReactionInformation::isValid( 713 ) );
      CHECK( true == ReactionInformation::isValid( 714 ) );
      CHECK( true == ReactionInformation::isValid( 715 ) );
      CHECK( true == ReactionInformation::isValid( 716 ) );
      CHECK( true == ReactionInformation::isValid( 717 ) );
      CHECK( true == ReactionInformation::isValid( 718 ) );
      CHECK( true == ReactionInformation::isValid( 719 ) );
      CHECK( true == ReactionInformation::isValid( 720 ) );
      CHECK( true == ReactionInformation::isValid( 721 ) );
      CHECK( true == ReactionInformation::isValid( 722 ) );
      CHECK( true == ReactionInformation::isValid( 723 ) );
      CHECK( true == ReactionInformation::isValid( 724 ) );
      CHECK( true == ReactionInformation::isValid( 725 ) );
      CHECK( true == ReactionInformation::isValid( 726 ) );
      CHECK( true == ReactionInformation::isValid( 727 ) );
      CHECK( true == ReactionInformation::isValid( 728 ) );
      CHECK( true == ReactionInformation::isValid( 729 ) );
      CHECK( true == ReactionInformation::isValid( 730 ) );
      CHECK( true == ReactionInformation::isValid( 731 ) );
      CHECK( true == ReactionInformation::isValid( 732 ) );
      CHECK( true == ReactionInformation::isValid( 733 ) );
      CHECK( true == ReactionInformation::isValid( 734 ) );
      CHECK( true == ReactionInformation::isValid( 735 ) );
      CHECK( true == ReactionInformation::isValid( 736 ) );
      CHECK( true == ReactionInformation::isValid( 737 ) );
      CHECK( true == ReactionInformation::isValid( 738 ) );
      CHECK( true == ReactionInformation::isValid( 739 ) );
      CHECK( true == ReactionInformation::isValid( 740 ) );
      CHECK( true == ReactionInformation::isValid( 741 ) );
      CHECK( true == ReactionInformation::isValid( 742 ) );
      CHECK( true == ReactionInformation::isValid( 743 ) );
      CHECK( true == ReactionInformation::isValid( 744 ) );
      CHECK( true == ReactionInformation::isValid( 745 ) );
      CHECK( true == ReactionInformation::isValid( 746 ) );
      CHECK( true == ReactionInformation::isValid( 747 ) );
      CHECK( true == ReactionInformation::isValid( 748 ) );
      CHECK( true == ReactionInformation::isValid( 749 ) );
      CHECK( true == ReactionInformation::isValid( 750 ) );
      CHECK( true == ReactionInformation::isValid( 751 ) );
      CHECK( true == ReactionInformation::isValid( 752 ) );
      CHECK( true == ReactionInformation::isValid( 753 ) );
      CHECK( true == ReactionInformation::isValid( 754 ) );
      CHECK( true == ReactionInformation::isValid( 755 ) );
      CHECK( true == ReactionInformation::isValid( 756 ) );
      CHECK( true == ReactionInformation::isValid( 757 ) );
      CHECK( true == ReactionInformation::isValid( 758 ) );
      CHECK( true == ReactionInformation::isValid( 759 ) );
      CHECK( true == ReactionInformation::isValid( 760 ) );
      CHECK( true == ReactionInformation::isValid( 761 ) );
      CHECK( true == ReactionInformation::isValid( 762 ) );
      CHECK( true == ReactionInformation::isValid( 763 ) );
      CHECK( true == ReactionInformation::isValid( 764 ) );
      CHECK( true == ReactionInformation::isValid( 765 ) );
      CHECK( true == ReactionInformation::isValid( 766 ) );
      CHECK( true == ReactionInformation::isValid( 767 ) );
      CHECK( true == ReactionInformation::isValid( 768 ) );
      CHECK( true == ReactionInformation::isValid( 769 ) );
      CHECK( true == ReactionInformation::isValid( 770 ) );
      CHECK( true == ReactionInformation::isValid( 771 ) );
      CHECK( true == ReactionInformation::isValid( 772 ) );
      CHECK( true == ReactionInformation::isValid( 773 ) );
      CHECK( true == ReactionInformation::isValid( 774 ) );
      CHECK( true == ReactionInformation::isValid( 775 ) );
      CHECK( true == ReactionInformation::isValid( 776 ) );
      CHECK( true == ReactionInformation::isValid( 777 ) );
      CHECK( true == ReactionInformation::isValid( 778 ) );
      CHECK( true == ReactionInformation::isValid( 779 ) );
      CHECK( true == ReactionInformation::isValid( 780 ) );
      CHECK( true == ReactionInformation::isValid( 781 ) );
      CHECK( true == ReactionInformation::isValid( 782 ) );
      CHECK( true == ReactionInformation::isValid( 783 ) );
      CHECK( true == ReactionInformation::isValid( 784 ) );
      CHECK( true == ReactionInformation::isValid( 785 ) );
      CHECK( true == ReactionInformation::isValid( 786 ) );
      CHECK( true == ReactionInformation::isValid( 787 ) );
      CHECK( true == ReactionInformation::isValid( 788 ) );
      CHECK( true == ReactionInformation::isValid( 789 ) );
      CHECK( true == ReactionInformation::isValid( 790 ) );
      CHECK( true == ReactionInformation::isValid( 791 ) );
      CHECK( true == ReactionInformation::isValid( 792 ) );
      CHECK( true == ReactionInformation::isValid( 793 ) );
      CHECK( true == ReactionInformation::isValid( 794 ) );
      CHECK( true == ReactionInformation::isValid( 795 ) );
      CHECK( true == ReactionInformation::isValid( 796 ) );
      CHECK( true == ReactionInformation::isValid( 797 ) );
      CHECK( true == ReactionInformation::isValid( 798 ) );
      CHECK( true == ReactionInformation::isValid( 799 ) );
      CHECK( true == ReactionInformation::isValid( 800 ) );
      CHECK( true == ReactionInformation::isValid( 801 ) );
      CHECK( true == ReactionInformation::isValid( 802 ) );
      CHECK( true == ReactionInformation::isValid( 803 ) );
      CHECK( true == ReactionInformation::isValid( 804 ) );
      CHECK( true == ReactionInformation::isValid( 805 ) );
      CHECK( true == ReactionInformation::isValid( 806 ) );
      CHECK( true == ReactionInformation::isValid( 807 ) );
      CHECK( true == ReactionInformation::isValid( 808 ) );
      CHECK( true == ReactionInformation::isValid( 809 ) );
      CHECK( true == ReactionInformation::isValid( 810 ) );
      CHECK( true == ReactionInformation::isValid( 811 ) );
      CHECK( true == ReactionInformation::isValid( 812 ) );
      CHECK( true == ReactionInformation::isValid( 813 ) );
      CHECK( true == ReactionInformation::isValid( 814 ) );
      CHECK( true == ReactionInformation::isValid( 815 ) );
      CHECK( true == ReactionInformation::isValid( 816 ) );
      CHECK( true == ReactionInformation::isValid( 817 ) );
      CHECK( true == ReactionInformation::isValid( 818 ) );
      CHECK( true == ReactionInformation::isValid( 819 ) );
      CHECK( true == ReactionInformation::isValid( 820 ) );
      CHECK( true == ReactionInformation::isValid( 821 ) );
      CHECK( true == ReactionInformation::isValid( 822 ) );
      CHECK( true == ReactionInformation::isValid( 823 ) );
      CHECK( true == ReactionInformation::isValid( 824 ) );
      CHECK( true == ReactionInformation::isValid( 825 ) );
      CHECK( true == ReactionInformation::isValid( 826 ) );
      CHECK( true == ReactionInformation::isValid( 827 ) );
      CHECK( true == ReactionInformation::isValid( 828 ) );
      CHECK( true == ReactionInformation::isValid( 829 ) );
      CHECK( true == ReactionInformation::isValid( 830 ) );
      CHECK( true == ReactionInformation::isValid( 831 ) );
      CHECK( true == ReactionInformation::isValid( 832 ) );
      CHECK( true == ReactionInformation::isValid( 833 ) );
      CHECK( true == ReactionInformation::isValid( 834 ) );
      CHECK( true == ReactionInformation::isValid( 835 ) );
      CHECK( true == ReactionInformation::isValid( 836 ) );
      CHECK( true == ReactionInformation::isValid( 837 ) );
      CHECK( true == ReactionInformation::isValid( 838 ) );
      CHECK( true == ReactionInformation::isValid( 839 ) );
      CHECK( true == ReactionInformation::isValid( 840 ) );
      CHECK( true == ReactionInformation::isValid( 841 ) );
      CHECK( true == ReactionInformation::isValid( 842 ) );
      CHECK( true == ReactionInformation::isValid( 843 ) );
      CHECK( true == ReactionInformation::isValid( 844 ) );
      CHECK( true == ReactionInformation::isValid( 845 ) );
      CHECK( true == ReactionInformation::isValid( 846 ) );
      CHECK( true == ReactionInformation::isValid( 847 ) );
      CHECK( true == ReactionInformation::isValid( 848 ) );
      CHECK( true == ReactionInformation::isValid( 849 ) );
      CHECK( true == ReactionInformation::isValid( 875 ) );
      CHECK( true == ReactionInformation::isValid( 876 ) );
      CHECK( true == ReactionInformation::isValid( 877 ) );
      CHECK( true == ReactionInformation::isValid( 878 ) );
      CHECK( true == ReactionInformation::isValid( 879 ) );
      CHECK( true == ReactionInformation::isValid( 880 ) );
      CHECK( true == ReactionInformation::isValid( 881 ) );
      CHECK( true == ReactionInformation::isValid( 882 ) );
      CHECK( true == ReactionInformation::isValid( 883 ) );
      CHECK( true == ReactionInformation::isValid( 884 ) );
      CHECK( true == ReactionInformation::isValid( 885 ) );
      CHECK( true == ReactionInformation::isValid( 886 ) );
      CHECK( true == ReactionInformation::isValid( 887 ) );
      CHECK( true == ReactionInformation::isValid( 888 ) );
      CHECK( true == ReactionInformation::isValid( 889 ) );
      CHECK( true == ReactionInformation::isValid( 890 ) );
      CHECK( true == ReactionInformation::isValid( 891 ) );
      CHECK( false == ReactionInformation::isValid( 999 ) );
      CHECK( false == ReactionInformation::isValid( 1000 ) );
      CHECK( false == ReactionInformation::isValid( 1001 ) );
    } // THEN

    THEN( "we an verify if the MT number is a valid lumped covariance reaction" ) {

      CHECK( false == ReactionInformation::isLumpedCovariance( 850 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 851 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 852 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 853 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 854 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 855 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 856 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 857 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 858 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 859 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 860 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 861 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 862 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 863 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 864 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 865 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 866 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 867 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 868 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 869 ) );
      CHECK( true == ReactionInformation::isLumpedCovariance( 870 ) );
      CHECK( false == ReactionInformation::isLumpedCovariance( 871 ) );
    } // THEN
  } // GIVEN

  GIVEN( "an ENDF material for a ground state target, mf and mt number" ) {

    auto tape = njoy::ENDFtk::tree::fromFile( "n-003_Li_007.endf" );
    auto material = tape.materials().front();
    auto n = njoy::dryad::id::ParticleID::neutron();
    auto li7 = njoy::dryad::id::ParticleID( 3007 );

    THEN( "partial mt numbers can be obtained for the total reaction" ) {

      auto partials = ReactionInformation::partials( n, li7, material, 3, 1 );

      CHECK(  38 == partials.size() );
      CHECK(  50 == partials[0].reactionType().mt() );
      CHECK(  16 == partials[1].reactionType().mt() );
      CHECK(  24 == partials[2].reactionType().mt() );
      CHECK(  25 == partials[3].reactionType().mt() );
      CHECK(  51 == partials[4].reactionType().mt() );
      CHECK(  52 == partials[5].reactionType().mt() );
      CHECK(  53 == partials[6].reactionType().mt() );
      CHECK(  54 == partials[7].reactionType().mt() );
      CHECK(  55 == partials[8].reactionType().mt() );
      CHECK(  56 == partials[9].reactionType().mt() );
      CHECK(  57 == partials[10].reactionType().mt() );
      CHECK(  58 == partials[11].reactionType().mt() );
      CHECK(  59 == partials[12].reactionType().mt() );
      CHECK(  60 == partials[13].reactionType().mt() );
      CHECK(  61 == partials[14].reactionType().mt() );
      CHECK(  62 == partials[15].reactionType().mt() );
      CHECK(  63 == partials[16].reactionType().mt() );
      CHECK(  64 == partials[17].reactionType().mt() );
      CHECK(  65 == partials[18].reactionType().mt() );
      CHECK(  66 == partials[19].reactionType().mt() );
      CHECK(  67 == partials[20].reactionType().mt() );
      CHECK(  68 == partials[21].reactionType().mt() );
      CHECK(  69 == partials[22].reactionType().mt() );
      CHECK(  70 == partials[23].reactionType().mt() );
      CHECK(  71 == partials[24].reactionType().mt() );
      CHECK(  72 == partials[25].reactionType().mt() );
      CHECK(  73 == partials[26].reactionType().mt() );
      CHECK(  74 == partials[27].reactionType().mt() );
      CHECK(  75 == partials[28].reactionType().mt() );
      CHECK(  76 == partials[29].reactionType().mt() );
      CHECK(  77 == partials[30].reactionType().mt() );
      CHECK(  78 == partials[31].reactionType().mt() );
      CHECK(  79 == partials[32].reactionType().mt() );
      CHECK(  80 == partials[33].reactionType().mt() );
      CHECK(  81 == partials[34].reactionType().mt() );
      CHECK(  82 == partials[35].reactionType().mt() );
      CHECK( 102 == partials[36].reactionType().mt() );
      CHECK( 104 == partials[37].reactionType().mt() );
    } // THEN

    THEN( "partial mt numbers can be obtained for inelastic scattering" ) {

      auto partials = ReactionInformation::partials( n, li7, material, 3, 4 );

      CHECK(  32 == partials.size() );
      CHECK(  51 == partials[0].reactionType().mt() );
      CHECK(  52 == partials[1].reactionType().mt() );
      CHECK(  53 == partials[2].reactionType().mt() );
      CHECK(  54 == partials[3].reactionType().mt() );
      CHECK(  55 == partials[4].reactionType().mt() );
      CHECK(  56 == partials[5].reactionType().mt() );
      CHECK(  57 == partials[6].reactionType().mt() );
      CHECK(  58 == partials[7].reactionType().mt() );
      CHECK(  59 == partials[8].reactionType().mt() );
      CHECK(  60 == partials[9].reactionType().mt() );
      CHECK(  61 == partials[10].reactionType().mt() );
      CHECK(  62 == partials[11].reactionType().mt() );
      CHECK(  63 == partials[12].reactionType().mt() );
      CHECK(  64 == partials[13].reactionType().mt() );
      CHECK(  65 == partials[14].reactionType().mt() );
      CHECK(  66 == partials[15].reactionType().mt() );
      CHECK(  67 == partials[16].reactionType().mt() );
      CHECK(  68 == partials[17].reactionType().mt() );
      CHECK(  69 == partials[18].reactionType().mt() );
      CHECK(  70 == partials[19].reactionType().mt() );
      CHECK(  71 == partials[20].reactionType().mt() );
      CHECK(  72 == partials[21].reactionType().mt() );
      CHECK(  73 == partials[22].reactionType().mt() );
      CHECK(  74 == partials[23].reactionType().mt() );
      CHECK(  75 == partials[24].reactionType().mt() );
      CHECK(  76 == partials[25].reactionType().mt() );
      CHECK(  77 == partials[26].reactionType().mt() );
      CHECK(  78 == partials[27].reactionType().mt() );
      CHECK(  79 == partials[28].reactionType().mt() );
      CHECK(  80 == partials[29].reactionType().mt() );
      CHECK(  81 == partials[30].reactionType().mt() );
      CHECK(  82 == partials[31].reactionType().mt() );
    } // THEN

    THEN( "partial mt numbers can be obtained for lumped covariance reactions" ) {

      auto partials = ReactionInformation::partials( n, li7, material, 33, 851 );

      CHECK( 2 == partials.size() );
      CHECK( 16 == partials[0].reactionType().mt() );
      CHECK( 24 == partials[1].reactionType().mt() );
    } // THEN
  } // GIVEN

  GIVEN( "an ENDF material for a metastable state target, mf and mt number" ) {

    auto tape = njoy::ENDFtk::tree::fromFile( "n-093_Np_236m1.endf" );
    auto material = tape.materials().front();
    auto n = njoy::dryad::id::ParticleID::neutron();
    auto np236m1 = njoy::dryad::id::ParticleID( 93236, 2 );

    THEN( "partial mt numbers can be obtained for the total reaction" ) {

      auto partials = ReactionInformation::partials( n, np236m1, material, 3, 1 );

      CHECK(  13 == partials.size() );
      CHECK(  52 == partials[0].reactionType().mt() );
      CHECK(  16 == partials[1].reactionType().mt() );
      CHECK(  17 == partials[2].reactionType().mt() );
      CHECK(  18 == partials[3].reactionType().mt() );
      CHECK(  37 == partials[4].reactionType().mt() );
      CHECK(  50 == partials[5].reactionType().mt() );
      CHECK(  51 == partials[6].reactionType().mt() );
      CHECK(  53 == partials[7].reactionType().mt() );
      CHECK(  54 == partials[8].reactionType().mt() );
      CHECK(  55 == partials[9].reactionType().mt() );
      CHECK(  56 == partials[10].reactionType().mt() );
      CHECK(  91 == partials[11].reactionType().mt() );
      CHECK( 102 == partials[12].reactionType().mt() );
    } // THEN

    THEN( "partial mt numbers can be obtained for inelastic scattering" ) {

      auto partials = ReactionInformation::partials( n, np236m1, material, 3, 4 );

      CHECK(   7 == partials.size() );
      CHECK(  50 == partials[0].reactionType().mt() );
      CHECK(  51 == partials[1].reactionType().mt() );
      CHECK(  53 == partials[2].reactionType().mt() );
      CHECK(  54 == partials[3].reactionType().mt() );
      CHECK(  55 == partials[4].reactionType().mt() );
      CHECK(  56 == partials[5].reactionType().mt() );
      CHECK(  91 == partials[6].reactionType().mt() );
    } // THEN
  } // GIVEN
} // SCENARIO
